article_types = [
    "listicle (e.g. '10 Ways to...')",
    "how-to guide",
    "product review",
    "opinion piece",
    "interview with an expert",
    "case study",
    "research-based article",
    "personal story",
    "tips and advice"
]

def generate_article_prompt(topic, profesi, target_market, seo_keyword, total_word_count, article_type):
    article_prompt = (f"You are {profesi}. Write a {article_type} article on {topic} that targets {target_market} "
                      f"and includes the SEO keyword '{seo_keyword}'. The article should be approximately "
                      f"{total_word_count} words in length and be informative, engaging, and optimized for search engines. "
                      f"Make sure the article is not detected as AI-generated by following these guidelines:\n"
                      f"1. Add emotional engagement by asking questions like 'Do you agree?' or 'What do you think?'.\n"
                      f"2. Include recent, detailed data, experiences, and facts.\n"
                      f"3. Use common, conversational language instead of overly formal or uncommon words.\n"
                      f"4. Write from a first-person perspective when appropriate, using words like 'we', 'I', and 'you'.\n"
                      f"5. Use short paragraphs rather than bullet points to avoid monotony.\n"
                      f"6. Keep paragraphs concise, ideally with no more than three sentences each.\n"
                      f"7. Avoid generic conclusions titled 'Conclusion'.\n"
                      f"8. Include calls to action (CTAs) that introduce your products/services with links in the paragraphs.\n"
                      f"9. Incorporate outbound links to other websites to strengthen your references.\n"
                      f"10. Use relevant images, videos, or multimedia to make the content engaging and dynamic.")
    
    meta_description = (f"Write a meta description of 125-155 characters that uses an active voice, includes a call to action, "
                        f"the focus keyphrase '{seo_keyword}', and specifications if needed. Ensure it matches the content and is unique.")
    
    keyphrase_guideline = (f"Ensure the focus keyphrase '{seo_keyword}' is used appropriately throughout the text. "
                           f"Do not overuse it to avoid keyword stuffing. Maintain a balance for good user experience and rankings. "
                           f"If the keyphrase density is too low, include it more often. If too high, replace it with synonyms where possible. "
                           f"Keep the text on topic to naturally incorporate the keyphrase and achieve optimal keyphrase density.")
    
    return article_prompt, meta_description, keyphrase_guideline

def main():
    topic = input("Enter the topic: ")
    profesi = input("AI as a/an (e.g., marketing expert, tech reviewer): ")
    target_market = input("Enter the target market: ")
    seo_keyword = input("SEO keyword: ")
    
    while True:
        try:
            total_word_count = int(input("Enter the total word count: "))
            break
        except ValueError:
            print("Please enter a valid number for the word count.")
    
    print("Choose an article type:")
    for i, article_type in enumerate(article_types):
        print(f"{i + 1}. {article_type}")

    while True:
        try:
            article_choice = int(input("Enter the number of your chosen article type: "))
            if 1 <= article_choice <= len(article_types):
                article_type = article_types[article_choice - 1]
                break
            else:
                print(f"Please enter a number between 1 and {len(article_types)}.")
        except ValueError:
            print("Please enter a valid number.")
    
    article_prompt, meta_description, keyphrase_guideline = generate_article_prompt(
        topic, profesi, target_market, seo_keyword, total_word_count, article_type)
    
    with open(input("filename=") + ".txt", "w") as file:
        file.write("Article Prompt:\n")
        file.write(article_prompt + "\n\n")
        file.write(meta_description + "\n\n")
        file.write(keyphrase_guideline + "\n")
    
    print("The prompts have been written to 'article_prompt.txt'.")

if __name__ == "__main__":
    main()
